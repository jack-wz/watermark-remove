"""add_document_chunks_table

Revision ID: 0007
Revises: 0006
Create Date: 2024-08-27 15:30:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from pgvector.sqlalchemy import VECTOR # Import VECTOR for the column type

# revision identifiers, used by Alembic.
revision: str = '0007'
down_revision: Union[str, None] = '0006'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('document_chunks',
    sa.Column('chunk_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('doc_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('chunk_text', sa.Text(), nullable=False),
    sa.Column('embedding', VECTOR(384), nullable=True), # Using VECTOR type
    sa.Column('chunk_order', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True), # Assuming onupdate is handled by trigger or ORM
    sa.ForeignKeyConstraint(['doc_id'], ['ingested_documents.doc_id'], name=op.f('fk_document_chunks_doc_id_ingested_documents'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('chunk_id', name=op.f('pk_document_chunks'))
    )
    op.create_index(op.f('ix_document_chunks_doc_id'), 'document_chunks', ['doc_id'], unique=False)
    # Potential index for embeddings (commented out, to be added based on specific needs as per data_storage_schema.sql)
    # op.create_index('idx_document_chunks_embedding_hnsw', 'document_chunks', ['embedding'], unique=False, postgresql_using='hnsw', postgresql_ops={'embedding': 'vector_l2_ops'})
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_document_chunks_doc_id'), table_name='document_chunks')
    # op.drop_index('idx_document_chunks_embedding_hnsw', table_name='document_chunks') # If HNSW index was created
    op.drop_table('document_chunks')
    # ### end Alembic commands ###
